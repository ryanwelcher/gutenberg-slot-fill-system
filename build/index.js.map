{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/slots/real-world/index.js","webpack:///./src/slots/real-world/plugin-post-status-info/index.js","webpack:///./src/utils/wordCounter/index.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["registerPlugin","wp","plugins","PluginPostStatusInfo","editPost","PluginPostStatusInfoTest","render","Component","element","count","wordcount","serialize","blocks","withSelect","data","compose","WordCounter","label","allowedCountTypes","select","ownProps","countType","counted","includes","getBlocks"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;ACHA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ICAQA,c,GAAmBC,EAAE,CAACC,O,CAAtBF,c;IACAG,oB,GAAyBF,EAAE,CAACG,Q,CAA5BD,oB;AAER;;AAGA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACtC,SACC,4IACC,yEAAC,oBAAD,QACC,yEAAC,0DAAD,OADD,CADD,EAIC,yEAAC,oBAAD,QACC,yEAAC,0DAAD;AACC,SAAK,EAAC,2BADP;AAEC,aAAS,EAAC;AAFX,IADD,CAJD,EAUC,yEAAC,oBAAD,QACC,yEAAC,0DAAD;AACC,SAAK,EAAC,wBADP;AAEC,aAAS,EAAC;AAFX,IADD,CAVD,CADD;AAmBA,CApBD;;AAsBAL,cAAc,CAAE,kCAAF,EAAsC;AAAEM,QAAM,EAAED;AAAV,CAAtC,CAAd,C;;;;;;;;;;;;;;;;IC5BQE,S,GAAaN,EAAE,CAACO,O,CAAhBD,S;IACAE,K,GAAUR,EAAE,CAACS,S,CAAbD,K;IACAE,S,GAAcV,EAAE,CAACW,M,CAAjBD,S;IACAE,U,GAAeZ,EAAE,CAACa,I,CAAlBD,U;IACAE,O,GAAYd,EAAE,CAACc,O,CAAfA,O;AAER;;;;;;;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAuC;AAAA,wBAAnCC,KAAmC;AAAA,MAAnCA,KAAmC,2BAA3B,YAA2B;AAAA,MAAbR,KAAa,QAAbA,KAAa;;AAC1D,MAAK,UAAUA,KAAf,EAAuB;AACtB,WAAO,IAAP;AACA;;AAED,SACC,4IACC,uFAAOQ,KAAP,CADD,EAEC,sFAAMR,KAAN,CAFD,CADD;AAMA,CAXD;;AAaA,IAAMS,iBAAiB,GAAG,CAAE,OAAF,EAAW,6BAAX,EAA0C,6BAA1C,CAA1B;AAEeH,sEAAO,CACrBF,UAAU,CAAE,UAAEM,MAAF,EAAUC,QAAV,EAAyB;AACpC,MAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAT,IAAsB,OAAxC;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAKJ,iBAAiB,CAACK,QAAlB,CAA4BF,SAA5B,CAAL,EAA+C;AAC9CC,WAAO,GAAGb,KAAK,CAAEE,SAAS,CAAEQ,MAAM,CAAE,aAAF,CAAN,CAAwBK,SAAxB,EAAF,CAAX,EAAoDH,SAApD,CAAf;AACA;;AACD,SACC;AAAEZ,SAAK,EAAEa;AAAT,GADD;AAGA,CATS,CADW,CAAP,CAWZN,WAXY,CAAf,E;;;;;;;;;;;AC5BA,aAAa,wCAAwC,EAAE,I","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// Basic Examples\n//import './slots/basic';\n\n// Real World Examples\nimport './slots/real-world';\n","// import './pre-publish-checklist';\nimport './plugin-post-status-info';\n","const { registerPlugin } = wp.plugins;\nconst { PluginPostStatusInfo } = wp.editPost;\n\nimport WordCounter from '../../../utils/wordCounter';\n\n\nconst PluginPostStatusInfoTest = () => {\n\treturn(\n\t\t<>\n\t\t\t<PluginPostStatusInfo>\n\t\t\t\t<WordCounter />\n\t\t\t</PluginPostStatusInfo>\n\t\t\t<PluginPostStatusInfo>\n\t\t\t\t<WordCounter\n\t\t\t\t\tlabel=\"Characters without Spaces\"\n\t\t\t\t\tcountType=\"characters_excluding_spaces\"\n\t\t\t\t/>\n\t\t\t</PluginPostStatusInfo>\n\t\t\t<PluginPostStatusInfo>\n\t\t\t\t<WordCounter\n\t\t\t\t\tlabel=\"Characters with Spaces\"\n\t\t\t\t\tcountType=\"characters_including_spaces\"\n\t\t\t\t/>\n\t\t\t</PluginPostStatusInfo>\n\t\t</>\n\t)\n};\n\nregisterPlugin( 'post-status-info-test-real-world', { render: PluginPostStatusInfoTest } );\n","const { Component} = wp.element;\nconst { count } = wp.wordcount;\nconst { serialize } = wp.blocks;\nconst { withSelect } = wp.data;\nconst { compose } = wp.compose;\n\n/**\n * Display the count with a label.\n *\n * @param {Object} params         Props for the component.\n * @param {string} [params.label] The label to display.\n * @param {int}    [params.count] The current count.\n */\nconst WordCounter = ( { label = \"Word Count\", count } ) => {\n\tif ( false === count ) {\n\t\treturn null;\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<span>{label}</span>\n\t\t\t<div>{count}</div>\n\t\t</>\n\t);\n};\n\nconst allowedCountTypes = [ 'words', 'characters_excluding_spaces', 'characters_including_spaces' ];\n\nexport default compose(\n\twithSelect( ( select, ownProps  ) => {\n\t\tconst countType = ownProps.countType || 'words';\n\t\tlet counted = false;\n\t\tif ( allowedCountTypes.includes( countType ) ) {\n\t\t\tcounted = count( serialize( select( 'core/editor' ).getBlocks() ), countType )\n\t\t}\n\t\treturn (\n\t\t\t{ count: counted }\n\t\t);\n\t} ),\n)( WordCounter )\n","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}